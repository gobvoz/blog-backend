{
  "users": [
    {
      "id": "1",
      "username": "admin",
      "password": "123456789",
      "avatar": "https://i.pravatar.cc/300?img=4",
      "about": "admin of this blog"
    },
    {
      "id": "2",
      "username": "user",
      "password": "123456789",
      "avatar": "https://i.pravatar.cc/300?img=5",
      "about": "user of this blog"
    },
    {
      "id": "3",
      "username": "john.doe",
      "password": "123456789",
      "avatar": "https://i.pravatar.cc/300?img=3",
      "about": "I am a designer currently living in South Florida. I am a fan of technology and design."
    },
    {
      "id": "4",
      "username": "jane.doe",
      "password": "123456789",
      "avatar": "https://i.pravatar.cc/300?img=1",
      "about": "I am a web developer currently living in South Florida. I am a fan of design, and programming. Also interested in writing, education, and entrepreneurship."
    }
  ],
  "articles": [
    {
      "id": "1",
      "profileId": "1",
      "title": "7 New JavaScript Features in ECMAScript 2022",
      "subtitle": "",
      "image": "https://miro.medium.com/v2/resize:fit:720/format:webp/1*KionUgns58P78XvfAFeeuw.jpeg",
      "createdAt": "12.01.2023",
      "link": "https://enlear.academy/7-new-javascript-features-in-ecmascript-2022-64a330f6eae2",
      "views": "19",
      "topics": ["Ecmascript", "JavaScript", "Features", "JS", "WebDevelopment"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "ECMAScript (often abbreviated as ES) is a standardized programming language specification for JavaScript. It is developed and maintained by the ECMAScript Language Specification committee and is the standard on which JavaScript is based. The specification sets out the rules and guidelines for how the JavaScript language should behave, including syntax, data types, and built-in objects. ECMAScript versions are released periodically, with new versions bringing new features and capabilities to the language.",
            "ECMAScript is widely used for web development, server-side and client-side scripting, and for creating mobile and desktop applications. JavaScript, JScript, and ActionScript are some popular implementations of ECMAScript. JavaScript is the most widely-used implementation supported by all major web browsers. So in this article, I will discuss the most famous JavaScript Features in ECMAScript 2022."
          ]
        },
        {
          "id": "2",
          "type": "PARAGRAPH",
          "content": [
            "ECMAScript (often abbreviated as ES) is a standardized programming language specification for JavaScript. It is developed and maintained by the ECMAScript Language Specification committee and is the standard on which JavaScript is based. The specification sets out the rules and guidelines for how the JavaScript language should behave, including syntax, data types, and built-in objects. ECMAScript versions are released periodically, with new versions bringing new features and capabilities to the language.",
            "ECMAScript is widely used for web development, server-side and client-side scripting, and for creating mobile and desktop applications. JavaScript, JScript, and ActionScript are some popular implementations of ECMAScript. JavaScript is the most widely-used implementation supported by all major web browsers. So in this article, I will discuss the most famous JavaScript Features in ECMAScript 2022."
          ]
        },
        {
          "id": "3",
          "type": "HEADER",
          "content": ["1. Top-level await"]
        },
        {
          "id": "4",
          "type": "PARAGRAPH",
          "content": [
            "Top-level await is a feature that was proposed for inclusion in ECMAScript 2022. Still, it was later removed from the proposal due to concerns about its impact on the language’s semantics and the difficulty of implementing it in existing JavaScript engines.",
            "The feature would have allowed developers to use the await keyword outside of an async function, enabling them to use asynchronous code at the top level of their scripts, such as in the global scope or in module exports.",
            "This feature was highly debated some developers would have found it very useful, as it would have allowed them to write cleaner and more readable code, others argued that it would have introduced potential errors and confusion, as it would have allowed the use of await in unexpected places, and it would have also made it more difficult to understand the control flow of a program.",
            "Currently, top-level await is not a part of ECMAScript, and it’s uncertain if it will be added in future versions."
          ]
        },
        {
          "id": "5",
          "type": "HEADER",
          "content": ["2. Method .at()"]
        },
        {
          "id": "6",
          "type": "PARAGRAPH",
          "content": [
            "The .at() the method is not a part of any official ECMAScript standard, but it may be available in some JavaScript libraries or frameworks.",
            "The .at() the method could be used to access an element of an array by its index, and it returns the element at the specified index. For example, if you have an array called myArray and you want to access the element at index 2, and you could use the following code:"
          ]
        },
        {
          "id": "7",
          "type": "CODE",
          "content": ["myArray.at(2);"]
        },
        {
          "id": "8",
          "type": "PARAGRAPH",
          "content": [
            "It is similar to the built-in Array.prototype.indexOf() method.",
            "It is worth noticing that JavaScript natively provides the bracket notation to access the elements of an array, for example:"
          ]
        },
        {
          "id": "9",
          "type": "CODE",
          "content": ["myArray[2];"]
        },
        {
          "id": "10",
          "type": "PARAGRAPH",
          "content": [
            "It is also important to notice that the .at() the method could have different behavior depending on your library or framework.",
            "Please let me know if you have more information about the context in which you have seen the method .at() so I can provide more detailed information."
          ]
        },
        {
          "id": "11",
          "type": "HEADER",
          "content": ["3. Class Field Declarations"]
        },
        {
          "id": "12",
          "type": "PARAGRAPH",
          "content": [
            "Class Field Declarations is a feature proposed for inclusion in ECMAScript 2022. It allows developers to define class properties directly in the class definition rather than in the constructor. It provides a more concise syntax for defining class properties and a more intuitive way to set up initial values for class properties.",
            "Here is an example of how class field declarations can be used:",
            "In this example, the class fields myField and myField2 are defined directly in the class definition and are set to their initial values. This is equivalent to defining properties in the constructor using this.myField = 'initial value' and this.myField2 = 0.",
            "Class field declarations also support both public and private access modifiers, allowing you to control the accessibility of the fields."
          ]
        },
        {
          "id": "13",
          "type": "CODE",
          "content": [
            "class MyClass {",
            "    #privateField;",
            "    publicField;",
            "    constructor () {",
            "        this.#privateField = \"I'm a private field\";",
            "        this.publicField = \"I'm a public field\";",
            "    }",
            "}"
          ]
        },
        {
          "id": "14",
          "type": "PARAGRAPH",
          "content": [
            "In this example, #privateField is a private field that can only be accessed within the class while publicField can be accessed from anywhere.",
            "This feature is currently in the proposal stage, and it's uncertain if it will be included in future versions of ECMAScript."
          ]
        },
        {
          "id": "15",
          "type": "HEADER",
          "content": ["4. RegExp Match Indices"]
        },
        {
          "id": "16",
          "type": "PARAGRAPH",
          "content": [
            "A class static block is a feature proposed for inclusion in ECMAScript 2022, it allows developers to define a block of code that will be executed when the class is first accessed.",
            "The static block could be used to perform some setup or initialization tasks for the class, such as defining static properties or methods, setting up constants, or running some code that needs to be executed only once.",
            "Here is an example of how a class static block can be used:",
            ""
          ]
        },
        {
          "id": "17",
          "type": "CODE",
          "content": [
            "class MyClass {",
            "    static {",
            "        // code to be executed when the class is first accessed",
            "        MyClass.staticProp = 'initial value';",
            "    }",
            "    static staticProp;",
            "",
            "    constructor () {",
            "        // ...",
            "    }",
            "    ",
            "    myMethod () {",
            "        // ...",
            "    }",
            "}"
          ]
        },
        {
          "id": "18",
          "type": "PARAGRAPH",
          "content": [
            "In this example, the class static block is defined directly after the class definition, and it sets up the static property MyClass.staticProp to the initial value of 'initial value'.",
            "It’s worth noticing that this feature is currently in the proposal stage, and it’s uncertain if it will be included in future versions of ECMAScript."
          ]
        },
        {
          "id": "19",
          "type": "HEADER",
          "content": ["5. Object.hasOwn() Method"]
        },
        {
          "id": "20",
          "type": "PARAGRAPH",
          "content": [
            "The correct method to check if an object has a property defined directly on it rather than on its prototype chain is Object.prototype.hasOwnProperty().",
            "For example, if you have an object called myObj and you want to check if it has a property called myProp, you could use:"
          ]
        },
        {
          "id": "21",
          "type": "CODE",
          "content": ["myObj.hasOwnProperty('myProp')"]
        },
        {
          "id": "22",
          "type": "PARAGRAPH",
          "content": [
            "The hasOwnProperty() the method returns a boolean indicating whether the object has the specified property as own (not inherited) property.",
            "It is also worth mentioning that you can use the in operator to check if a property exists in an object. However, it checks for both own and inherited properties, for example:"
          ]
        },
        {
          "id": "23",
          "type": "CODE",
          "content": ["'myProp' in myObj"]
        },
        {
          "id": "24",
          "type": "PARAGRAPH",
          "content": [
            "This line of code will return true whether the property exists directly on the object or in its prototype chain."
          ]
        },
        {
          "id": "25",
          "type": "HEADER",
          "content": ["6. Error: .cause"]
        },
        {
          "id": "26",
          "type": "PARAGRAPH",
          "content": [
            "In JavaScript, an Error an object is a built-in object that represents an error. It has several properties, such as name, message, and stack, that provide information about the error that occurred.",
            "The .cause property is not a part of the official ECMAScript standard, but it may be available in some JavaScript libraries or frameworks. It could be used to store additional information about the error, such as the underlying cause of the error or the exception that was thrown.",
            "For example, if you have a library that wraps a third-party API and you want to propagate the errors that occur in the API, you could create your own error class that inherits from the built-in Error object and add a .cause property to store the original error."
          ]
        },
        {
          "id": "27",
          "type": "CODE",
          "content": [
            "class ApiError extends Error {",
            "    constructor(cause, message) {",
            "        super(message);",
            "        this.cause = cause;",
            "        this.name = 'ApiError';",
            "    }",
            "}",
            "",
            "try {",
            "    // Call the third-party API",
            "    throw new Error('something went wrong');",
            "} catch (error) {",
            "    throw new ApiError(error, 'An error occurred while calling the API');",
            "}"
          ]
        },
        {
          "id": "28",
          "type": "PARAGRAPH",
          "content": [
            "In this example, the ApiError the class inherits from the built-in Error object and adds a cause property to store the original error.",
            "It’s worth noting that this feature is not part of the official ECMAScript specification, and it depends on your library or framework."
          ]
        },
        {
          "id": "30",
          "type": "HEADER",
          "content": ["7. RegExp: match indices(‘d’ flag)"]
        },
        {
          "id": "31",
          "type": "PARAGRAPH",
          "content": [
            "The ‘d’ flag is a proposed feature for ECMAScript that would allow developers to use regular expressions to match text while also capturing the indices of the matched text. This can be useful for tasks such as highlighting matched text in a text editor or determining the location of matches in a larger string.",
            "When using the ‘d’ flag, the result of the regular expression match would be an object that contains information about the match, including the matched text, as well as the start and end indices of the match within the original string.",
            "Here is an example of how this feature might be used:"
          ]
        },
        {
          "id": "32",
          "type": "CODE",
          "content": [
            "let str = 'The quick brown fox jumps over the lazy dog.';",
            "let regex = /[a-z]+/g;",
            "let match = regex.exec(str);",
            "console.log(match.index); // 4",
            "console.log(match[0]); // 'quick'"
          ]
        },
        {
          "id": "33",
          "type": "PARAGRAPH",
          "content": [
            "This code matches any sequence of lowercase letters in the string “The quick brown fox jumps over the lazy dog.” and returns the first match and its index.",
            "With the ‘d’ flag:"
          ]
        },
        {
          "id": "34",
          "type": "CODE",
          "content": [
            "let str = 'The quick brown fox jumps over the lazy dog.';",
            "let regex = /[a-z]+/gd;",
            "let match = regex.exec(str);",
            "console.log(match.index); // {start:4, end:9}",
            "console.log(match[0]); // 'quick'"
          ]
        },
        {
          "id": "35",
          "type": "PARAGRAPH",
          "content": [
            "This code matches any sequence of lowercase letters in the string “The quick brown fox jumps over the lazy dog.” and returns the first match, its index, and the end index.",
            "It’s worth noting that this feature is not part of the official ECMAScript specification and is in the proposal stage, so it may not be supported in all JavaScript environments. You may have to use polyfills or transpilers to use it."
          ]
        },
        {
          "id": "36",
          "type": "HEADER",
          "content": ["Conclusion"]
        },
        {
          "id": "37",
          "type": "PARAGRAPH",
          "content": [
            "In conclusion, ECMAScript 2022 is the latest version of the ECMAScript standard, which provides a set of rules and guidelines for programming languages such as JavaScript. It includes new features such as private class fields, optional chaining, and null coalescing, as well as updates to existing features. It is still in development and is expected to be finalized and published in 2022. These new features allow developers to write more efficient, expressive, and safe code. ECMAScript 2022 is a step forward in the evolution of JavaScript language, constantly updated to meet the new demands of developers and make it more powerful and versatile.",
            "Thank you for Reading !!!"
          ]
        }
      ]
    },
    {
      "id": "2",
      "profileId": "2",
      "title": "Top 10 Tricky Javascript Questions often asked by Interviewers",
      "subtitle": "Top 10 tricky Javascript questions often asked by interviewers. Make sure you know all of them!",
      "image": "https://miro.medium.com/v2/resize:fit:720/format:webp/1*KionUgns58P78XvfAFeeuw.jpeg",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "79",
      "topics": [
        "JavaScript",
        "JavaScript Interview",
        "Interview Questions",
        "Tricky Questions",
        "JavaScript Tips"
      ],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "If you apply for a Frontend or web developer role, you might be assessed for your javascript skills. There is a lot of JS concept that is quite tricky such as hoisting, closure, data types, asynchronous, and others. Here are some of the most frequently asked and trickiest Javascript Questions:"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "In Javascript, we have 7 primitive data types (string, number, bigint, boolean, undefined, symbol, and null). These all are immutable meaning that once a value is assigned, we cannot modify them, what we can do is reassign it to a different value (different memory pointer). The other data types such as Object and Function, on the other hand, is mutable meaning we can modify the value in the same memory pointer."
          ]
        },
        {
          "id": "4",
          "type": "CODE",
          "content": [
            "// Q1",
            "let text = 'abcde';",
            "text[1] = 'z';",
            "console.log(text); // ans: abcde"
          ]
        },
        {
          "id": "5",
          "type": "PARAGRAPH",
          "content": [
            "String is immutable, so once assigned to a value, you cannot change it to a different value. What you can do is reassign it. Remember that changing value and reassigning to another value is different"
          ]
        },
        {
          "id": "6",
          "type": "CODE",
          "content": [
            "// Q2",
            "const arr = [1, 2, 3, 4]",
            "arr.length = 0;",
            "console.log(arr); // ans: []"
          ]
        },
        {
          "id": "7",
          "type": "PARAGRAPH",
          "content": [
            "Assigning arr.length as 0 is the same as resetting or clearing the array, so right now, the array will become an empty array"
          ]
        },
        {
          "id": "8",
          "type": "CODE",
          "content": [
            "// Q3",
            "const arr = [1,2,3,4];",
            "arr[100] = undefined;",
            "console.log(arr, arr.length); //ans: [ 1, 2, 3, 4, <96 empty items>, undefined ] 101"
          ]
        },
        {
          "id": "9",
          "type": "PARAGRAPH",
          "content": [
            "Because an array consumes a contiguous memory location, when we assign the index 100 to a value (including undefined), JS will reserve the memory from index 0 to index 100. This means the array length now is 101"
          ]
        },
        {
          "id": "10",
          "type": "HEADER",
          "content": ["2. Var and Hoisting"]
        },
        {
          "id": "11",
          "type": "CODE",
          "content": [
            "// Q4",
            "var variable = 10;",
            "(() => {",
            "    variable2 = 100;",
            "    console.log(variable);",
            "    console.log(variable2);",
            "    variable = 20;",
            "    var variable2 = 50;",
            "    console.log(variable);",
            "})();",
            "console.log(variable);",
            "var variable = 30",
            "console.log(variable2);",
            "// ans:",
            "// 10",
            "// 100",
            "// 20",
            "// 20",
            "// ReferenceError: variable2 is not defined"
          ]
        },
        {
          "id": "12",
          "type": "PARAGRAPH",
          "content": [
            "var is a functional scope variable, while let and const are block-scoped variables. Only var can be hoisted, meaning that variable declaration is always moved to the top. Because of the hoisting, you can assign, call, or use the variable before you even declare it with var keyword. However, let and const cannot be hoisted because it enables the TDZ (Temporal Dead Zone), meaning the variable is unreachable before it is declared.",
            "In the example above, variable2 is declared inside a function with var keyword that makes that variable is only available within the function scopes only. So when anything outside the function wants to use or call that variable, referenceError is thrown"
          ]
        },
        {
          "id": "13",
          "type": "CODE",
          "content": [
            "// Q5 ",
            "test(); // not error",
            "function test() {",
            "    console.log('test');",
            "}",
            "",
            "test2(); // error",
            "var test2 = () => console.log('test2');"
          ]
        },
        {
          "id": "14",
          "type": "PARAGRAPH",
          "content": [
            "Function declaration with function keyword can be hoisted. However, an arrow function cannot be hoisted, even if it is declared with var variable."
          ]
        },
        {
          "id": "15",
          "type": "HEADER",
          "content": ["3. Accidental Global Variable"]
        },
        {
          "id": "16",
          "type": "CODE",
          "content": [
            "// Q6",
            "function foo() {",
            "    let a = b = 0;",
            "    a++;",
            "    return a;",
            "}",
            "foo();",
            "typeof b; // => number",
            "typeof a; // => undefined",
            "",
            "console.log(a); //error: ReferenceError: a is not defined"
          ]
        },
        {
          "id": "17",
          "type": "PARAGRAPH",
          "content": [
            "var is a functional scoped variable and let is a block-scoped variable. Although it seems that a and bare declared using let in let a = b = 0, the reality is variable b is declared as a global variable and assigned to a window object. In another word, it is similar as"
          ]
        },
        {
          "id": "18",
          "type": "CODE",
          "content": [
            "function foo() {",
            "    window.b = 0;",
            "    let a = b;",
            "    a++;",
            "    return a;",
            "}"
          ]
        },
        {
          "id": "19",
          "type": "HEADER",
          "content": ["4. Closure"]
        },
        {
          "id": "20",
          "type": "CODE",
          "content": [
            "// Q7",
            "const length = 4;",
            "const fns = [];",
            "const fns2 = [];",
            "for (var i = 0; i < length; i++) {",
            "    fns.push(() => console.log(i));",
            "}",
            "for (let i = 0; i < length; i++) {",
            "    fns2.push(() => console.log(i));",
            "}",
            "fns.forEach(fn => fn()); // => 4 4 4 4",
            "fns2.forEach(fn => fn()); // => 0 1 2 3"
          ]
        },
        {
          "id": "21",
          "type": "PARAGRAPH",
          "content": [
            "Closure is a preservation of a variable environment even though the variable is already changed or garbage collected. In the above question, the difference here is in the variable declaration, where the first loop is using var and the second loop is using let. var is a functional scoped variable, so when it’s declared inside a for loop block, the var is considered a global variable instead of an internal block variable. On the other hand, let is a block-scoped variable, similar to the variable declaration in other languages such as Java and C++.",
            "In this case, closure is only happening in let variable. Each of the functions pushed to the fns2 array remembers the current value of the variable, no matter if the variable is changed in the future. Oppositely, the fns do not remember the current value of the variable, it uses the future or final value of the global variable"
          ]
        },
        {
          "id": "22",
          "type": "HEADER",
          "content": ["5. Object"]
        },
        {
          "id": "23",
          "type": "CODE",
          "content": [
            "// Q8",
            "var obj1 = {n: 1};",
            "var obj2 = obj1;",
            "obj2.n = 2",
            "console.log(obj1); // ans: {n: 2}",
            "",
            "// Q9",
            "function foo(obj) {",
            "    obj.n = 3",
            "    obj.name = 'test'",
            "}",
            "foo(obj2);",
            "console.log(obj1); // ans: {n: 3, name: 'test'}"
          ]
        },
        {
          "id": "24",
          "type": "PARAGRAPH",
          "content": [
            "As we know, the object variable only contains the pointer of memory location of that object. So here obj2 and obj1 point to the same object. This means that if we change any value in obj2, obj1 will also be affected because essentially it’s the same object. Similarly, when we assign an object as a parameter in a function, the argument passed only contains the object pointer. So, the function can modify the object directly without returning anything. This technique is called passed by reference"
          ]
        },
        {
          "id": "25",
          "type": "CODE",
          "content": [
            "// Q10",
            "var foo = {n: 1};",
            "var bar = foo;",
            "console.log(foo === bar); // true",
            "foo.x = foo = {n: 2};",
            "",
            "console.log(foo); // ans: {n: 2}",
            "console.log(bar); // ans: {n: 1, x: {n: 2}}",
            "console.log(foo === bar) //false"
          ]
        },
        {
          "id": "26",
          "type": "PARAGRAPH",
          "content": [
            "Because the object variable only contains the pointer of memory location of that object, when we declare var bar = foo, both foo and bar point to the same object.",
            "In the next logic, foo = {n:2} is running first where foo is assigned to a different object. Hence, foo has a pointer to a different object. At the same time, foo.x = foo is running, foo here still contains the old pointer. so the logic is similar with"
          ]
        },
        {
          "id": "27",
          "type": "CODE",
          "content": ["foo = {n: 2};", "bar.x = foo"]
        },
        {
          "id": "28",
          "type": "PARAGRAPH",
          "content": [
            "so bar.x = {n: 2}. Finally the value of foo is {n: 2} , while bar is {n:1, x: {n: 2 }}"
          ]
        },
        {
          "id": "29",
          "type": "HEADER",
          "content": ["6. This"]
        },
        {
          "id": "30",
          "type": "CODE",
          "content": [
            "// Q11",
            "const obj = {",
            "name: 'test',",
            "print: function(){console.log(this.name)},",
            "},",
            "print: function() { console.log(this.name) }",
            "print2: () => console.log(this.name, this)",
            "}",
            "",
            "obj.print(); // ans: test",
            "obj.prop.print(); // ans: prop name",
            "obj.print2(); // ans: undefined, window global object"
          ]
        },
        {
          "id": "31",
          "type": "PARAGRAPH",
          "content": [
            "The above example shows how this keyword works in an object. this refers to an object execution context in a function execution. However, this scope is only available in a regular function declaration and not in the arrow function. The above example shows the explicit binding where for example, object1.object2.object3.object4.print(), the print function will use the latest object which is object4 as the this context. If this object is not bound, it will fall back to the root object which is the window global object which is happening when we call obj.print2()",
            "On the other hand, you must also understand the implicit binding where the object context is already bound before, so the next function execution always uses that object as the this context. For example, when we use func.bind(<object>) , it will return a new function that use <object> as the new execution context."
          ]
        },
        {
          "id": "32",
          "type": "HEADER",
          "content": ["7. Coercion"]
        },
        {
          "id": "33",
          "type": "CODE",
          "content": [
            "// Q12",
            "console.log(1 +  '2' + '2'); // ans: 122",
            "console.log(1 +  +'2' + '2'); // ans: 32",
            "console.log(1 +  -'1' + '2'); // ans: 02",
            "console.log(+'1' +  '1' + '2'); // ans: 112",
            "console.log( 'A' - 'B' + '2'); // ans: NaN2",
            "console.log( 'A' - 'B' + 2); // ans: NaN",
            "\"10,11\" == [[[[10]], 11]] // 10,11 == 10,11, and: true",
            "\"[object Object]\" == {name: 'test'} // ans true"
          ]
        },
        {
          "id": "34",
          "type": "PARAGRAPH",
          "content": [
            "Coercion is one of the trickiest JS questions. In general, there are 2 rules. The first rule is if 2 operands are connected with + operand, both operands will be changed to a string first with toString method and then concatenated. Meanwhile, the other operator such as - , *, or / will change the operand to a number. If it cannot be coerced to a number, NaN will be returned.",
            "It will be trickier if the operand includes an object or array. Any object has toString method that returned [object Object]. But in an array, the toString method will return the underlying value that is separated by a comma."
          ]
        },
        {
          "id": "35",
          "type": "NOTE",
          "content": ["Noted that: == means that coercion is allowed to happen, while === is not."]
        },
        {
          "id": "36",
          "type": "HEADER",
          "content": ["8. async"]
        },
        {
          "id": "37",
          "type": "CODE",
          "content": [
            "// Q13",
            "console.log(1);",
            "new Promise(resolve => {",
            "    console.log(2);",
            "    return setTimeout(() => {",
            "        console.log(3);",
            "        resolve();",
            "    }, 0);",
            "})",
            "",
            "setTimeout(function() { console.log(4) }, 1000);",
            "setTimeout(function() { console.log(5) }, 0);",
            "console.log(6);",
            "// ans: 1 2 6 3 5 4"
          ]
        },
        {
          "id": "38",
          "type": "PARAGRAPH",
          "content": [
            "Here, you need to know how event loop, macrotask and microtask queue work. You can check out my previous article here where I deep dive into those concepts. In general, the asynchronous function will execute later after all the synchronous function is finished executing."
          ]
        },
        {
          "id": "39",
          "type": "CODE",
          "content": [
            "// Q14",
            "async function foo() {return 10}",
            "console.log(foo()); // ans: Promise { 10 }"
          ]
        },
        {
          "id": "40",
          "type": "PARAGRAPH",
          "content": [
            "Once the function is declared with async. it always returns a Promise, no matter if the internal logic is synchronous or asynchronous."
          ]
        },
        {
          "id": "41",
          "type": "CODE",
          "content": [
            "// Q15",
            "const delay = async (item) => new Promise(",
            "    resolve => setTimeout(() => {",
            "        console.log(item);",
            "        resolve(item);",
            "    }, Math.random() * 100)",
            ")",
            "",
            "console.log(1);",
            "let arr = [3,4,5,6];",
            "arr.forEach(async (item) => await delay(item));",
            "console.log(2);"
          ]
        },
        {
          "id": "42",
          "type": "PARAGRAPH",
          "content": [
            "forEach function is always synchronous, no matter if each loop is synchronous or asynchronous. This means that each loop will not wait for the other. If you want to execute each loop in sequence and wait for each other, use for of instead."
          ]
        },
        {
          "id": "43",
          "type": "HEADER",
          "content": ["9. Function"]
        },
        {
          "id": "44",
          "type": "CODE",
          "content": [
            "// Q16",
            "if(function f() {}) { console.log(f) }",
            "// error: ReferenceError: f is not defined"
          ]
        },
        {
          "id": "45",
          "type": "PARAGRAPH",
          "content": [
            "In the above example, the if condition is satisfied because function declaration is considered a true value. But, the internal block cannot access the function declaration because they have a different block scope."
          ]
        },
        {
          "id": "46",
          "type": "CODE",
          "content": [
            "// Q17",
            "function foo() {",
            "    return",
            "    { name: 2 }",
            "}",
            "",
            "foo() // return undefined"
          ]
        },
        {
          "id": "47",
          "type": "PARAGRAPH",
          "content": [
            "because of the automatic semicolon insertion (ASI), the return statement will be ended with the semicolon and everything below it will not be run or considered."
          ]
        },
        {
          "id": "48",
          "type": "CODE",
          "content": [
            "// Q18",
            "function foo(a,b,a) { return a+b }",
            "console.log(foo(1, 2, 3)); // ans: 3+2 = 5",
            "",
            "function foo2(a, b, c = a) { return a + b + c }",
            "console.log(foo2(1, 2)) // ans = 1 + 2 + 1 = 4",
            "",
            "function foo3(a = b, b) { return a + b }",
            "console.log(foo3(1, 2)) // ans = 1 + 2 = 3",
            "console.log(foo3(undefined, 2)) // error"
          ]
        },
        {
          "id": "49",
          "type": "PARAGRAPH",
          "content": [
            "The first 3 executions are quite clear, but the last function execution throws an error because b is used before it’s declared, similar to this"
          ]
        },
        {
          "id": "50",
          "type": "CODE",
          "content": ["let a = b;", "let b = 2"]
        },
        {
          "id": "51",
          "type": "HEADER",
          "content": ["10. Prototype"]
        },
        {
          "id": "52",
          "type": "CODE",
          "content": [
            "// Q19",
            "function Person() {}",
            "Person.prototype.walk = function() {",
            "    return this;",
            "}",
            "",
            "Person.run = function() {",
            "    return this;",
            "}",
            "",
            "let user = new Person();",
            "let walk = user.walk;",
            "console.log(walk()); // window object",
            "console.log(user.walk()); // user object",
            "",
            "let run = Person.run;",
            "console.log(run()); // window object",
            "console.log(user.run()); // TypeError: user.run is not a function"
          ]
        },
        {
          "id": "53",
          "type": "PARAGRAPH",
          "content": [
            "Prototype is an object that exists in every variable that is used to inherit features from its parent. For example, when you declare a string variable, that string variable has a prototype that inherits from String.prototype. That’s why you can call a string method inside the string variable such as string.replace(), string.substring(), etc",
            "In the above example, we assign walk function to the Person function prototype and assign run function to the function object. It’s 2 different Objects. Every object that is created by the function using the new keyword will inherit the method from the function prototype and not the function object. But remember if we assign that function to a variable like this let walk = user.walk, the function will forget the user as this execution context and will fall back to the window object instead."
          ]
        },
        {
          "id": "54",
          "type": "SEPARATOR"
        },
        {
          "id": "55",
          "type": "PARAGRAPH",
          "content": [
            "Thank you for reading. I will post new articles biweekly (hopefully). They are mostly related to my software engineering experience and my thoughts about social life. If you have any questions or suggestions about what I should write next, please don’t hesitate to put them in the comment section. Don’t forget to support me by subscribing Medium using my referral link: https://andreassujono.medium.com/membership or even buy me coffee in the tip box below. Thanks"
          ]
        }
      ]
    },
    {
      "id": "3",
      "profileId": "2",
      "title": "Test article 3",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/2/480/240",
      "createdAt": "15.03.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "5",
      "topics": ["JavaScript Interview", "Interview Questions", "Tricky Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "4",
      "profileId": "2",
      "title": "Test article 4",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/20/480/240",
      "createdAt": "12.01.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "24",
      "topics": ["Interview Questions", "Tricky Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "5",
      "profileId": "2",
      "title": "Test article 5",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/26/480/240",
      "createdAt": "21.10.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "90",
      "topics": ["JavaScript", "Tricky Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "6",
      "profileId": "2",
      "title": "Test article 6",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/24/480/240",
      "createdAt": "15.01.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "36",
      "topics": ["JavaScript", "JavaScript Interview", "Tricky Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "7",
      "profileId": "2",
      "title": "Test article 7",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/39/480/240",
      "createdAt": "08.03.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "1",
      "topics": ["JavaScript", "Tricky Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "8",
      "profileId": "2",
      "title": "Test article 8",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/42/480/240",
      "createdAt": "05.06.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "15",
      "topics": ["JavaScript", "Interview Questions", "Tricky Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "9",
      "profileId": "2",
      "title": "Test article 9",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/48/480/240",
      "createdAt": "23.09.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "24",
      "topics": ["JavaScript"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "10",
      "profileId": "2",
      "title": "Test article 10",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/96/480/240",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "51",
      "topics": ["Interview Questions", "Tricky Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "11",
      "profileId": "2",
      "title": "Test article 11",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/119/480/240",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "66",
      "topics": ["JavaScript Interview", "Tricky Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "12",
      "profileId": "2",
      "title": "Test article 12",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/160/480/240",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "35",
      "topics": ["JavaScript", "Interview Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "13",
      "profileId": "2",
      "title": "Test article 13",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/176/480/240",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "78",
      "topics": ["JavaScript", "Interview Questions", "Tricky Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "14",
      "profileId": "2",
      "title": "Test article 14",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/180/480/240",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "41",
      "topics": ["JavaScript", "JavaScript Interview", "Tricky Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "15",
      "profileId": "2",
      "title": "Test article 15",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/201/480/240",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "39",
      "topics": ["JavaScript Interview", "Interview Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "16",
      "profileId": "2",
      "title": "Test article 16",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/217/480/240",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "56",
      "topics": ["JavaScript Interview", "Interview Questions", "Tricky Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "17",
      "profileId": "2",
      "title": "Test article 17",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/292/480/240",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "19",
      "topics": ["Food", "Cooking", "Recipe"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "18",
      "profileId": "2",
      "title": "Test article 18",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/304/480/240",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "8",
      "topics": ["Technology"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "19",
      "profileId": "2",
      "title": "Test article 19",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/312/480/240",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "25",
      "topics": ["Food"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "20",
      "profileId": "2",
      "title": "Test article 20",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/326/480/240",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "71",
      "topics": ["Food", "Recipe"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "21",
      "profileId": "2",
      "title": "Test article 21",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/364/480/240",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "33",
      "topics": ["Technology"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "22",
      "profileId": "2",
      "title": "Test article 22",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/366/480/240",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "64",
      "topics": ["JavaScript", "JavaScript Interview", "Interview Questions", "Tricky Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "23",
      "profileId": "2",
      "title": "Test article 23",
      "subtitle": "Test article subtitle",
      "image": "https://miro.medium.com/v2/resize:fit:720/format:webp/1*KionUgns58P78XvfAFeeuw.jpeg",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "29",
      "topics": ["JavaScript", "JavaScript Interview", "Interview Questions", "Tricky Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "24",
      "profileId": "2",
      "title": "Test article 24",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/370/480/240",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "95",
      "topics": ["JavaScript", "JavaScript Interview", "Interview Questions", "Tricky Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "25",
      "profileId": "2",
      "title": "Test article 25",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/445/480/240",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "71",
      "topics": ["JavaScript", "JavaScript Interview", "Interview Questions", "Tricky Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "26",
      "profileId": "2",
      "title": "Test article 26",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/490/480/240",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "11",
      "topics": ["Cooking", "Recipe"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "27",
      "profileId": "2",
      "title": "Test article 27",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/493/480/240",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "47",
      "topics": ["Food"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "28",
      "profileId": "2",
      "title": "Test article 28",
      "subtitle": "Test article subtitle",
      "image": "https://miro.medium.com/v2/resize:fit:720/format:webp/1*KionUgns58P78XvfAFeeuw.jpeg",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "50",
      "topics": ["JavaScript", "JavaScript Interview", "Interview Questions", "Tricky Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "29",
      "profileId": "2",
      "title": "Test article 29",
      "subtitle": "Test article subtitle",
      "image": "https://miro.medium.com/v2/resize:fit:720/format:webp/1*KionUgns58P78XvfAFeeuw.jpeg",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "21",
      "topics": ["JavaScript", "JavaScript Interview", "Interview Questions", "Tricky Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "30",
      "profileId": "2",
      "title": "Test article 30",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/532/480/240",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "42",
      "topics": ["JavaScript", "JavaScript Interview", "Interview Questions", "Tricky Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "31",
      "profileId": "2",
      "title": "Test article 31",
      "subtitle": "Test article subtitle",
      "image": "https://picsum.photos/id/668/480/240",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "57",
      "topics": ["JavaScript", "JavaScript Interview", "Interview Questions", "Tricky Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "32",
      "profileId": "2",
      "title": "Test article 32",
      "subtitle": "Test article subtitle",
      "image": "https://miro.medium.com/v2/resize:fit:720/format:webp/1*KionUgns58P78XvfAFeeuw.jpeg",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "71",
      "topics": ["JavaScript", "JavaScript Interview", "Interview Questions", "Tricky Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    },
    {
      "id": "33",
      "profileId": "2",
      "title": "Test article 33",
      "subtitle": "Test article subtitle",
      "image": "https://miro.medium.com/v2/resize:fit:720/format:webp/1*KionUgns58P78XvfAFeeuw.jpeg",
      "createdAt": "16.12.2022",
      "link": "https://andreassujono.medium.com/top-10-tricky-javascript-questions-often-asked-by-interviewers-45c7dd90495e",
      "views": "68",
      "topics": ["JavaScript", "JavaScript Interview", "Interview Questions", "Tricky Questions"],
      "body": [
        {
          "id": "1",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        },
        {
          "id": "2",
          "type": "HEADER",
          "content": ["1. Mutability"]
        },
        {
          "id": "3",
          "type": "PARAGRAPH",
          "content": [
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali",
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla euismod, nisl vitae aliquam ultricies, nunc nisl ultricies nunc, vitae ali"
          ]
        }
      ]
    }
  ],
  "comments": [
    {
      "id": "1",
      "body": "Awesome",
      "articleId": "1",
      "profileId": "2",
      "createdAt": "2023-03-05",
      "updatedAt": "2023-03-05"
    },
    {
      "id": "2",
      "body": "Awesome",
      "articleId": "1",
      "profileId": "3",
      "createdAt": "2023-03-06",
      "updatedAt": "2023-03-06"
    },
    {
      "id": "3",
      "body": "Awesome",
      "articleId": "1",
      "profileId": "4",
      "createdAt": "2023-03-07",
      "updatedAt": "2023-03-07"
    },
    {
      "id": "4",
      "body": "Awesome",
      "articleId": "2",
      "profileId": "1",
      "createdAt": "2023-03-05",
      "updatedAt": "2023-03-05"
    },
    {
      "id": "5",
      "body": "Awesome",
      "articleId": "2",
      "profileId": "2",
      "createdAt": "2023-03-06",
      "updatedAt": "2023-03-06"
    },
    {
      "id": "6",
      "body": "Awesome",
      "articleId": "2",
      "profileId": "3",
      "createdAt": "2023-03-07",
      "updatedAt": "2023-03-07"
    },
    {
      "id": "7",
      "body": "Awesome",
      "articleId": "2",
      "profileId": "4",
      "createdAt": "2023-03-08",
      "updatedAt": "2023-03-08"
    },
    {
      "articleId": "1",
      "profileId": "1",
      "body": "My new comment",
      "createdAt": "2023-07-18",
      "id": "eEF9Tqf"
    }
  ],
  "profiles": [
    {
      "id": "1",
      "first": "Morgan",
      "last": "Kane",
      "age": "33",
      "currency": "USD",
      "country": "USA",
      "city": "New York",
      "username": "admin",
      "avatar": "https://i.pravatar.cc/300?img=4",
      "about": "admin of this blog"
    },
    {
      "id": "2",
      "first": "Jessica",
      "last": "Voe",
      "age": "25",
      "currency": "USD",
      "country": "USA",
      "city": "New York",
      "username": "admin",
      "avatar": "https://i.pravatar.cc/300?img=5",
      "about": "user of this blog"
    },
    {
      "id": "3",
      "first": "John",
      "last": "Doe",
      "age": "30",
      "currency": "USD",
      "country": "USA",
      "city": "Miami",
      "username": "admin",
      "avatar": "https://i.pravatar.cc/300?img=3",
      "about": "I am a designer currently living in South Florida. I am a fan of technology and design."
    },
    {
      "id": "4",
      "first": "Jane",
      "last": "Doe",
      "age": "31",
      "currency": "USD",
      "country": "USA",
      "city": "Miami",
      "username": "admin",
      "avatar": "https://i.pravatar.cc/300?img=1",
      "about": "I am a web developer currently living in South Florida. I am a fan of design, and programming. Also interested in writing, education, and entrepreneurship."
    }
  ]
}
